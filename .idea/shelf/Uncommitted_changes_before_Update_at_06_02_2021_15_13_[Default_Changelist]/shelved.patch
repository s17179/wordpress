Index: wp-content/plugins/ultimate-member/includes/core/class-profile.php
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?php\r\nnamespace um\\core;\r\n\r\n// Exit if accessed directly\r\nif ( ! defined( 'ABSPATH' ) ) exit;\r\n\r\nif ( ! class_exists( 'um\\core\\Profile' ) ) {\r\n\r\n\r\n\t/**\r\n\t * Class Profile\r\n\t * @package um\\core\r\n\t */\r\n\tclass Profile {\r\n\r\n\r\n\t\t/**\r\n\t\t * @var array\r\n\t\t */\r\n\t\tpublic $arr_user_slugs = array();\r\n\r\n\r\n\t\t/**\r\n\t\t * @var array\r\n\t\t */\r\n\t\tpublic $arr_user_roles = array();\r\n\r\n\r\n\t\t/**\r\n\t\t * @var\r\n\t\t */\r\n\t\tvar $active_tab;\r\n\r\n\r\n\t\t/**\r\n\t\t * Profile constructor.\r\n\t\t */\r\n\t\tfunction __construct() {\r\n\t\t\tadd_action( 'template_redirect', array( &$this, 'active_tab' ), 10002 );\r\n\t\t\tadd_action( 'template_redirect', array( &$this, 'active_subnav' ), 10002 );\r\n\t\t}\r\n\r\n\r\n\t\t/**\r\n\t\t * @param array $args\r\n\t\t *\r\n\t\t * @return string\r\n\t\t */\r\n\t\tfunction get_show_bio_key( $args ) {\r\n\t\t\t$key = apply_filters( 'um_profile_bio_key', 'description', $args );\r\n\t\t\treturn $key;\r\n\t\t}\r\n\r\n\r\n\t\t/**\r\n\t\t * Delete profile avatar AJAX handler\r\n\t\t */\r\n\t\tfunction ajax_delete_profile_photo() {\r\n\t\t\tUM()->check_ajax_nonce();\r\n\r\n\t\t\t/**\r\n\t\t\t * @var $user_id\r\n\t\t\t */\r\n\t\t\textract( $_REQUEST );\r\n\r\n\t\t\tif ( ! UM()->roles()->um_current_user_can( 'edit', $user_id ) ) {\r\n\t\t\t\tdie( __( 'You can not edit this user' ) );\r\n\t\t\t}\r\n\r\n\t\t\tUM()->files()->delete_core_user_photo( $user_id, 'profile_photo' );\r\n\t\t}\r\n\r\n\r\n\t\t/**\r\n\t\t * Delete cover photo AJAX handler\r\n\t\t */\r\n\t\tfunction ajax_delete_cover_photo() {\r\n\t\t\tUM()->check_ajax_nonce();\r\n\r\n\t\t\t/**\r\n\t\t\t * @var $user_id\r\n\t\t\t */\r\n\t\t\textract( $_REQUEST );\r\n\r\n\t\t\tif ( ! UM()->roles()->um_current_user_can( 'edit', $user_id ) ) {\r\n\t\t\t\tdie( __( 'You can not edit this user' ) );\r\n\t\t\t}\r\n\r\n\t\t\tUM()->files()->delete_core_user_photo( $user_id, 'cover_photo' );\r\n\t\t}\r\n\r\n\r\n\t\t/**\r\n\t\t * Pre-defined privacy options\r\n\t\t *\r\n\t\t * @return array\r\n\t\t */\r\n\t\tfunction tabs_privacy() {\r\n\t\t\t$privacy = array(\r\n\t\t\t\t0 => __( 'Anyone', 'ultimate-member' ),\r\n\t\t\t\t1 => __( 'Guests only', 'ultimate-member' ),\r\n\t\t\t\t2 => __( 'Members only', 'ultimate-member' ),\r\n\t\t\t\t3 => __( 'Only the owner', 'ultimate-member' ),\r\n\t\t\t\t4 => __( 'Specific roles', 'ultimate-member' ),\r\n\t\t\t);\r\n\r\n\t\t\treturn $privacy;\r\n\t\t}\r\n\r\n\r\n\t\t/**\r\n\t\t * All tab data\r\n\t\t *\r\n\t\t * @return array\r\n\t\t */\r\n\t\tfunction tabs() {\r\n\r\n\t\t\t/**\r\n\t\t\t * UM hook\r\n\t\t\t *\r\n\t\t\t * @type filter\r\n\t\t\t * @title um_profile_tabs\r\n\t\t\t * @description Extend user profile tabs\r\n\t\t\t * @input_vars\r\n\t\t\t * [{\"var\":\"$tabs\",\"type\":\"array\",\"desc\":\"Profile tabs\"}]\r\n\t\t\t * @change_log\r\n\t\t\t * [\"Since: 2.0\"]\r\n\t\t\t * @usage\r\n\t\t\t * <?php add_filter( 'um_profile_tabs', 'function_name', 10, 1 ); ?>\r\n\t\t\t * @example\r\n\t\t\t * <?php\r\n\t\t\t * add_filter( 'um_profile_tabs', 'my_profile_tabs', 10, 1 );\r\n\t\t\t * function my_profile_tabs( $tabs ) {\r\n\t\t\t *     // your code here\r\n\t\t\t *     return $tabs;\r\n\t\t\t * }\r\n\t\t\t * ?>\r\n\t\t\t */\r\n\t\t\t$tabs = apply_filters( 'um_profile_tabs', array(\r\n\t\t\t\t'main' => array(\r\n\t\t\t\t\t'name' => __( 'About', 'ultimate-member' ),\r\n\t\t\t\t\t'icon' => 'um-faicon-user'\r\n\t\t\t\t),\r\n\t\t\t\t'posts' => array(\r\n\t\t\t\t\t'name' => __( 'Ulubione posty', 'ultimate-member' ),\r\n\t\t\t\t\t'icon' => 'um-icon-heart'\r\n\t\t\t\t),\r\n\t\t\t\t'comments' => array(\r\n\t\t\t\t\t'name' => __( 'Comments', 'ultimate-member' ),\r\n\t\t\t\t\t'icon' => 'um-faicon-comment'\r\n\t\t\t\t)\r\n\t\t\t) );\r\n\r\n\t\t\t// disable private tabs\r\n\t\t\tif ( ! is_admin() ) {\r\n\t\t\t\tif ( is_user_logged_in() ) {\r\n\t\t\t\t\t$user_id = um_user( 'ID' );\r\n\t\t\t\t\tum_fetch_user( get_current_user_id() );\r\n\t\t\t\t}\r\n\r\n\t\t\t\tforeach ( $tabs as $id => $tab ) {\r\n\t\t\t\t\tif ( ! $this->can_view_tab( $id, $tab ) ) {\r\n\t\t\t\t\t\tunset( $tabs[ $id ] );\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( is_user_logged_in() ) {\r\n\t\t\t\t\tum_fetch_user( $user_id );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn $tabs;\r\n\t\t}\r\n\r\n\r\n\t\t/**\r\n\t\t * Check if the user can view the current tab\r\n\t\t *\r\n\t\t * @param string $tab\r\n\t\t * @param array $tab_data\r\n\t\t *\r\n\t\t * @return bool\r\n\t\t */\r\n\t\tfunction can_view_tab( $tab, $tab_data = array() ) {\r\n\t\t\t$can_view = false;\r\n\r\n\t\t\t$target_id = (int) UM()->user()->target_id;\r\n\t\t\tif ( empty( $target_id ) ) {\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\r\n\t\t\tif ( isset( $tab_data['default_privacy'] ) ) {\r\n\t\t\t\t$privacy = $tab_data['default_privacy'];\r\n\t\t\t} else {\r\n\t\t\t\t$privacy = (int) UM()->options()->get( 'profile_tab_' . $tab . '_privacy' );\r\n\t\t\t}\r\n\r\n\t\t\t$privacy = apply_filters( 'um_profile_menu_tab_privacy', $privacy, $tab );\r\n\t\t\tswitch ( $privacy ) {\r\n\t\t\t\tcase 0:\r\n\t\t\t\t\t$can_view = true;\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 1:\r\n\t\t\t\t\t$can_view = ! is_user_logged_in();\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 2:\r\n\t\t\t\t\t$can_view = is_user_logged_in();\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 3:\r\n\t\t\t\t\t$can_view = is_user_logged_in() && get_current_user_id() === $target_id;\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 4:\r\n\t\t\t\t\tif ( is_user_logged_in() ) {\r\n\t\t\t\t\t\tif ( isset( $tab_data['default_privacy'] ) ) {\r\n\t\t\t\t\t\t\t$roles = isset( $tab_data['default_privacy_roles'] ) ? $tab_data['default_privacy_roles'] : array();\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t$roles = (array) UM()->options()->get( 'profile_tab_' . $tab . '_roles' );\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t$current_user_roles = um_user( 'roles' );\r\n\t\t\t\t\t\tif ( ! empty( $current_user_roles ) && count( array_intersect( $current_user_roles, $roles ) ) > 0 ) {\r\n\t\t\t\t\t\t\t$can_view = true;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tdefault:\r\n\t\t\t\t\t$can_view = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\r\n\t\t\treturn $can_view;\r\n\t\t}\r\n\r\n\r\n\t\t/**\r\n\t\t * Tabs that are active\r\n\t\t *\r\n\t\t * @return array\r\n\t\t */\r\n\t\tfunction tabs_active() {\r\n\t\t\t$tabs = $this->tabs();\r\n\r\n\t\t\tforeach ( $tabs as $id => $info ) {\r\n\t\t\t\tif ( ! empty( $info['hidden'] ) ) {\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( ! UM()->options()->get( 'profile_tab_' . $id ) ) {\r\n\t\t\t\t\tunset( $tabs[ $id ] );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif ( ! is_admin() || ( defined( 'DOING_AJAX' ) && DOING_AJAX ) ) {\r\n\t\t\t\t/**\r\n\t\t\t\t * UM hook\r\n\t\t\t\t *\r\n\t\t\t\t * @type filter\r\n\t\t\t\t * @title um_user_profile_tabs\r\n\t\t\t\t * @description Extend profile tabs\r\n\t\t\t\t * @input_vars\r\n\t\t\t\t * [{\"var\":\"$tabs\",\"type\":\"array\",\"desc\":\"Profile Tabs\"}]\r\n\t\t\t\t * @change_log\r\n\t\t\t\t * [\"Since: 2.0\"]\r\n\t\t\t\t * @usage\r\n\t\t\t\t * <?php add_filter( 'um_user_profile_tabs', 'function_name', 10, 1 ); ?>\r\n\t\t\t\t * @example\r\n\t\t\t\t * <?php\r\n\t\t\t\t * add_filter( 'um_user_profile_tabs', 'my_user_profile_tabs', 10, 1 );\r\n\t\t\t\t * function my_user_profile_tabs( $tabs ) {\r\n\t\t\t\t *     // your code here\r\n\t\t\t\t *     return $tabs;\r\n\t\t\t\t * }\r\n\t\t\t\t * ?>\r\n\t\t\t\t */\r\n\t\t\t\t$tabs = apply_filters( 'um_user_profile_tabs', $tabs );\r\n\t\t\t}\r\n\r\n\t\t\treturn $tabs;\r\n\t\t}\r\n\r\n\r\n\t\t/**\r\n\t\t * Get active_tab\r\n\t\t *\r\n\t\t * @return string\r\n\t\t */\r\n\t\tfunction active_tab() {\r\n\r\n\t\t\t// get active tabs\r\n\t\t\t$tabs = UM()->profile()->tabs_active();\r\n\r\n\t\t\tif ( ! UM()->options()->get( 'profile_menu' ) ) {\r\n\r\n\t\t\t\t$query_arg = get_query_var( 'profiletab' );\r\n\t\t\t\tif ( ! empty( $query_arg ) && ! empty( $tabs[ $query_arg ]['hidden'] ) ) {\r\n\t\t\t\t\t$this->active_tab = $query_arg;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tif ( ! empty( $tabs ) ) {\r\n\t\t\t\t\t\tforeach ( $tabs as $k => $tab ) {\r\n\t\t\t\t\t\t\tif ( ! empty( $tab['hidden'] ) ) {\r\n\t\t\t\t\t\t\t\t$this->active_tab = $k;\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\t\t\t\t$query_arg = get_query_var( 'profiletab' );\r\n\t\t\t\tif ( ! empty( $query_arg ) && ! empty( $tabs[ $query_arg ] ) ) {\r\n\t\t\t\t\t$this->active_tab = $query_arg;\r\n\t\t\t\t} else {\r\n\t\t\t\t\t$default_tab = UM()->options()->get( 'profile_menu_default_tab' );\r\n\r\n\t\t\t\t\tif ( ! empty( $tabs[ $default_tab ] ) ) {\r\n\t\t\t\t\t\t$this->active_tab = $default_tab;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tif ( ! empty( $tabs ) ) {\r\n\t\t\t\t\t\t\tforeach ( $tabs as $k => $tab ) {\r\n\t\t\t\t\t\t\t\tif ( ! empty( $tab['hidden'] ) ) {\r\n\t\t\t\t\t\t\t\t\t$this->active_tab = $k;\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t/**\r\n\t\t\t * UM hook\r\n\t\t\t *\r\n\t\t\t * @type filter\r\n\t\t\t * @title um_profile_active_tab\r\n\t\t\t * @description Change active profile tab\r\n\t\t\t * @input_vars\r\n\t\t\t * [{\"var\":\"$tab\",\"type\":\"string\",\"desc\":\"Active Profile tab\"}]\r\n\t\t\t * @change_log\r\n\t\t\t * [\"Since: 2.0\"]\r\n\t\t\t * @usage\r\n\t\t\t * <?php add_filter( 'um_profile_active_tab', 'function_name', 10, 1 ); ?>\r\n\t\t\t * @example\r\n\t\t\t * <?php\r\n\t\t\t * add_filter( 'um_profile_active_tab', 'my_profile_active_tab', 10, 1 );\r\n\t\t\t * function my_profile_active_tab( $tab ) {\r\n\t\t\t *     // your code here\r\n\t\t\t *     return $tab;\r\n\t\t\t * }\r\n\t\t\t * ?>\r\n\t\t\t */\r\n\t\t\t$this->active_tab = apply_filters( 'um_profile_active_tab', $this->active_tab );\r\n\r\n\t\t\treturn $this->active_tab;\r\n\t\t}\r\n\r\n\r\n\t\t/**\r\n\t\t * Get active active_subnav\r\n\t\t *\r\n\t\t * @return string|null\r\n\t\t */\r\n\t\tfunction active_subnav() {\r\n\r\n\t\t\t$this->active_subnav = null;\r\n\r\n\t\t\tif ( get_query_var( 'subnav' ) ) {\r\n\t\t\t\t$this->active_subnav = get_query_var( 'subnav' );\r\n\t\t\t}\r\n\r\n\t\t\treturn $this->active_subnav;\r\n\t\t}\r\n\r\n\r\n\t\t/**\r\n\t\t * Show meta in profile\r\n\t\t *\r\n\t\t * @param array $array Meta Array\r\n\t\t * @return string\r\n\t\t */\r\n\t\tfunction show_meta( $array ) {\r\n\t\t\t$output = '';\r\n\r\n\t\t\t$fields_without_metakey = UM()->builtin()->get_fields_without_metakey();\r\n\r\n\t\t\tif ( ! empty( $array ) ) {\r\n\t\t\t\tforeach ( $array as $key ) {\r\n\t\t\t\t\tif ( $key ) {\r\n\t\t\t\t\t\t$data = array();\r\n\t\t\t\t\t\tif ( isset( UM()->builtin()->all_user_fields[ $key ] ) ) {\r\n\t\t\t\t\t\t\t$data = UM()->builtin()->all_user_fields[ $key ];\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t$data['in_profile_meta'] = true;\r\n\r\n\t\t\t\t\t\t$value = um_filtered_value( $key, $data );\r\n\t\t\t\t\t\tif ( ! $value && ! in_array( $data['type'], $fields_without_metakey ) ) {\r\n\t\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif ( ! UM()->options()->get( 'profile_show_metaicon' ) ) {\r\n\t\t\t\t\t\t\t$icon = '';\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t$icon = ! empty( $data['icon'] ) ? '<i class=\"' . $data['icon'] . '\"></i>' : '';\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t$items[] = apply_filters( 'um_show_meta_item_html', '<span>' . $icon . $value . '</span>', $key );\r\n\t\t\t\t\t\t$items[] = '<span class=\"b\">&bull;</span>';\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif ( isset( $items ) ) {\r\n\t\t\t\tarray_pop( $items );\r\n\t\t\t\tforeach ( $items as $item ) {\r\n\t\t\t\t\t$output .= $item;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn $output;\r\n\t\t}\r\n\r\n\r\n\t\t/**\r\n\t\t * New menu\r\n\t\t *\r\n\t\t * @param string $position\r\n\t\t * @param string $element\r\n\t\t * @param string $trigger\r\n\t\t * @param array $items\r\n\t\t * @param array $args\r\n\t\t */\r\n\t\tfunction new_ui( $position, $element, $trigger, $items, $args = array() ) {\r\n\r\n\t\t\t$additional_data = '';\r\n\t\t\tforeach ( $args as $key => $value ) {\r\n\t\t\t\t$additional_data .= \" data-{$key}=\\\"{$value}\\\"\";\r\n\t\t\t} ?>\r\n\r\n\t\t\t<div class=\"um-dropdown\" data-element=\"<?php echo esc_attr( $element ); ?>\" data-position=\"<?php echo esc_attr( $position ); ?>\" data-trigger=\"<?php echo esc_attr( $trigger ); ?>\"<?php echo $additional_data ?>>\r\n\t\t\t\t<div class=\"um-dropdown-b\">\r\n\t\t\t\t\t<div class=\"um-dropdown-arr\"><i class=\"\"></i></div>\r\n\t\t\t\t\t<ul>\r\n\t\t\t\t\t\t<?php foreach ( $items as $k => $v ) { ?>\r\n\t\t\t\t\t\t\t<li><?php echo $v; ?></li>\r\n\t\t\t\t\t\t<?php } ?>\r\n\t\t\t\t\t</ul>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\r\n\t\t\t<?php\r\n\t\t}\r\n\r\n\r\n\t\t/**\r\n\t\t * UM Placeholders for user link, avatar link\r\n\t\t *\r\n\t\t * @param $placeholders\r\n\t\t *\r\n\t\t * @return array\r\n\t\t */\r\n\t\tfunction add_placeholder( $placeholders ) {\r\n\t\t\t$placeholders[] = '{user_profile_link}';\r\n\t\t\t$placeholders[] = '{user_avatar_url}';\r\n\t\t\t$placeholders[] = '{password}';\r\n\t\t\treturn $placeholders;\r\n\t\t}\r\n\r\n\r\n\t\t/**\r\n\t\t * UM Replace Placeholders for user link, avatar link\r\n\t\t *\r\n\t\t * @param $replace_placeholders\r\n\t\t *\r\n\t\t * @return array\r\n\t\t */\r\n\t\tfunction add_replace_placeholder( $replace_placeholders ) {\r\n\t\t\t$replace_placeholders[] = um_get_user_avatar_url();\r\n\t\t\t$replace_placeholders[] = um_user_profile_url();\r\n\t\t\t$replace_placeholders[] = esc_html__( 'Your set password', 'ultimate-member' );\r\n\t\t\treturn $replace_placeholders;\r\n\t\t}\r\n\r\n\t}\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- wp-content/plugins/ultimate-member/includes/core/class-profile.php	(revision f2e03b5d5d436d551392334ed2e59c1b497cb946)
+++ wp-content/plugins/ultimate-member/includes/core/class-profile.php	(date 1612620818216)
@@ -136,20 +136,34 @@
 			 * }
 			 * ?>
 			 */
-			$tabs = apply_filters( 'um_profile_tabs', array(
-				'main' => array(
-					'name' => __( 'About', 'ultimate-member' ),
-					'icon' => 'um-faicon-user'
-				),
-				'posts' => array(
-					'name' => __( 'Ulubione posty', 'ultimate-member' ),
-					'icon' => 'um-icon-heart'
-				),
-				'comments' => array(
-					'name' => __( 'Comments', 'ultimate-member' ),
-					'icon' => 'um-faicon-comment'
-				)
-			) );
+			if(um_is_myprofile()) {
+				$tabs = apply_filters( 'um_profile_tabs', array(
+					'main'     => array(
+						'name' => __( 'About', 'ultimate-member' ),
+						'icon' => 'um-faicon-user'
+					),
+					'posts'    => array(
+						'name' => __( 'Ulubione posty', 'ultimate-member' ),
+						'icon' => 'um-icon-heart'
+					),
+					'comments' => array(
+						'name' => __( 'Comments', 'ultimate-member' ),
+						'icon' => 'um-faicon-comment'
+					)
+				) );
+			}
+			else{
+				$tabs = apply_filters( 'um_profile_tabs', array(
+					'main'     => array(
+						'name' => __( 'About', 'ultimate-member' ),
+						'icon' => 'um-faicon-user'
+					),
+					'comments' => array(
+						'name' => __( 'Comments', 'ultimate-member' ),
+						'icon' => 'um-faicon-comment'
+					)
+				) );
+            }
 
 			// disable private tabs
 			if ( ! is_admin() ) {
